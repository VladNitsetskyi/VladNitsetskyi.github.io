{"version":3,"sources":["components/helpers/FormattedTimeOutput.jsx","components/UI/StopwatchButton/StopwatchButton.jsx","components/helpers/LapsList.jsx","components/helpers/ButtonsToDisplay.jsx","containers/Stopwatch/Stopwatch.jsx","App.js","index.js"],"names":["formattedTimeOutput","props","react_default","a","createElement","className","isPaused","Date","time","getUTCHours","slice","getUTCMinutes","getUTCSeconds","StopwatchButton","buttonClassName","title","onClick","click","LapsList","laps","map","lap","i","key","length","UI_StopwatchButton_StopwatchButton","lapClearAllHandler","ButtonsToDisplay","buttons","startHandler","buttonTitle","Fragment","pauseToggleHandler","resetHandler","lapHandler","Stopwatch","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","startTime","now","incrementer","setInterval","state","setState","prevState","clearInterval","concat","inherits","createClass","value","FormattedTimeOutput","helpers_ButtonsToDisplay","helpers_LapsList","Component","App","containers_Stopwatch_Stopwatch","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b3e50f30.chunk.js","sourcesContent":["import React from \"react\";\n\nconst formattedTimeOutput = props => {\n  return (\n    <div className=\"stopwatch-time-display\">\n      <div className={props.isPaused ? \"stopwatch-time-display-animation\" : \"\"}>\n        <div>\n          <div>\n            <span>{(\"0\" + new Date(props.time).getUTCHours()).slice(-2)}</span>:\n            <span>\n              {(\"0\" + new Date(props.time).getUTCMinutes()).slice(-2)}\n            </span>\n            :\n            <span>\n              {(\"0\" + new Date(props.time).getUTCSeconds()).slice(-2)}\n            </span>\n          </div>\n          <div className=\"stopwatch-timemeasure\">\n            <span className=\"stopwatch-timemeasure-value\">hr</span>\n            <span className=\"stopwatch-timemeasure-value\">min</span>\n            <span className=\"stopwatch-timemeasure-value\">sec</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default formattedTimeOutput;\n","import React from \"react\";\nimport \"./StopwatchButton.scss\";\n\nconst StopwatchButton = props => {\n  let buttonClassName;\n  switch (props.title) {\n    case \"Start\":\n      buttonClassName = \"start\";\n      break;\n    case \"Clear Laps\":\n      buttonClassName = \"clear\";\n      break;\n    case \"Continue\":\n      buttonClassName = \"continue\";\n      break;\n    case \"Reset\":\n      buttonClassName = \"reset\";\n      break;\n    default:\n      buttonClassName = \"\";\n  }\n  return (\n    <button onClick={props.click} className={\"default \" + buttonClassName}>\n      {props.title}\n    </button>\n  );\n};\n\nexport default StopwatchButton;\n","import React from \"react\";\nimport StopwatchButton from \"../UI/StopwatchButton/StopwatchButton\";\n\nconst LapsList = props => {\n  let formattedLapItem = time =>\n    (\"0\" + new Date(time).getUTCHours()).slice(-2) +\n    \":\" +\n    (\"0\" + new Date(time).getUTCMinutes()).slice(-2) +\n    \":\" +\n    (\"0\" + new Date(time).getUTCSeconds()).slice(-2);\n\n  return (\n    <ul className=\"stopwatch-laps\">\n      {props.laps\n        ? props.laps.map((lap, i) => (\n            <li key={i} className=\"stopwatch-lap-item\">\n              <strong>{i + 1}</strong># {formattedLapItem(lap)}\n            </li>\n          ))\n        : \"\"}\n      {props.laps.length > 0 ? (\n        <StopwatchButton title=\"Clear Laps\" click={props.lapClearAllHandler} />\n      ) : null}\n    </ul>\n  );\n};\n\nexport default LapsList;\n","import React from \"react\";\nimport StopwatchButton from \"../UI/StopwatchButton/StopwatchButton\";\n\nconst ButtonsToDisplay = props => {\n  let buttons;\n  if (props.time == 0) {\n    buttons = <StopwatchButton title=\"Start\" click={props.startHandler} />;\n  } else {\n    let buttonTitle = !props.isPaused ? \"Pause\" : \"Continue\";\n    buttons = (\n      <React.Fragment>\n        <StopwatchButton title={buttonTitle} click={props.pauseToggleHandler} />\n        <StopwatchButton title=\"Reset\" click={props.resetHandler} />\n        <StopwatchButton title=\"Lap\" click={props.lapHandler} />\n      </React.Fragment>\n    );\n  }\n  return <div className=\"stopwatch-buttons-container\">{buttons}</div>;\n};\n\nexport default ButtonsToDisplay;\n","import React, { Component } from \"react\";\nimport \"./Stopwatch.scss\";\nimport FormattedTimeOutput from \"../../components/helpers/FormattedTimeOutput\";\nimport LapsList from \"../../components/helpers/LapsList\";\nimport ButtonsToDisplay from \"../../components/helpers/ButtonsToDisplay\";\n\nexport class Stopwatch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0,\n      laps: [],\n      isPaused: false\n    };\n    this.incrementer = null;\n  }\n\n  startHandler = () => {\n    let startTime = Date.now();\n    this.incrementer = setInterval(() => {\n      if (!this.state.isPaused) {\n        this.setState({\n          time: Date.now() - startTime\n        });\n      } else {\n        startTime += 1000;\n      }\n    }, 1000);\n  };\n\n  pauseToggleHandler = () => {\n    this.setState(prevState => ({\n      isPaused: !prevState.isPaused\n    }));\n  };\n\n  resetHandler = () => {\n    clearInterval(this.incrementer);\n    this.setState({\n      time: 0,\n      isPaused: false\n    });\n  };\n\n  lapHandler = () => {\n    this.setState(prevState => ({\n      laps: prevState.laps.concat(this.state.time)\n    }));\n  };\n\n  lapClearAllHandler = () => {\n    this.setState({\n      laps: []\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"stopwatch-container\">\n        <FormattedTimeOutput\n          time={this.state.time}\n          isPaused={this.state.isPaused}\n        />\n        <ButtonsToDisplay\n          time={this.state.time}\n          isPaused={this.state.isPaused}\n          startHandler={this.startHandler}\n          pauseToggleHandler={this.pauseToggleHandler}\n          resetHandler={this.resetHandler}\n          lapHandler={this.lapHandler}\n        />\n        <LapsList\n          laps={this.state.laps}\n          lapClearAllHandler={this.lapClearAllHandler}\n          time={this.state.time}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;\n","import React, { Component } from 'react';\nimport Stopwatch from './containers/Stopwatch/Stopwatch';\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n<Stopwatch />\n            </div>\n            \n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}